#!/usr/bin/env ruby

def detect_files(file, allowed_extensions)
	files = []
	type = File.ftype(file)
	if type == "directory"
		Dir[file + "/*"].each do |f|
			files.concat detect_files(f, allowed_extensions)
		end
	elsif type == "file"
		extension = File.extname(file)
		files << file if allowed_extensions.include? extension
	end

	return files
end

def format_se(string)
	return string.upcase
end

def format_101(string)
	return "S0#{string[0..0]}E#{string[1..2]}"
end

def format_x(string)
	return "S0#{string[1..1]}E#{string[3..4]}"
end

video_files = detect_files(ARGV.first, [".mkv", ".ts", ".avi"])
video_files.each do |video_file|
	extension = File.extname(video_file)
	basename = File.basename(video_file)
	dirname = File.dirname(video_file)
	filename = basename.gsub(/#{extension}$/, "").downcase

	regexes = [/s[0-9]{2}e[0-9]{2}/, /[0-9]{3}/, /s[0-9]{1}x[0-9]{2}/]
	formatters = [:format_se, :format_101, :format_x]

	new_filename = ""
	regexes.each_with_index do |regex, index|
		result = filename.scan(regex)
		if result.count > 0
			formatter = formatters[index]
			new_filename = method(formatter).call(result.first)
			break
		end
	end

	if new_filename.length > 0
		puts "Renaming #{basename} to #{new_filename + extension}"
		File.rename(video_file, dirname + "/" + new_filename + extension)
	end
end
